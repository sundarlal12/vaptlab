import React, { useState } from "react";
import { ChevronDown } from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";

const iso27001PentestingFaqs = [
  {
    q: "What is ISO 27001 penetration testing?",
    a: "ISO 27001 penetration testing is a security assessment that validates the effectiveness of your Information Security Management System (ISMS) controls. It helps organizations demonstrate compliance with ISO/IEC 27001 standards by testing security controls and identifying vulnerabilities."
  },
  {
    q: "How does penetration testing support ISO 27001 compliance?",
    a: "Penetration testing supports ISO 27001 compliance by providing evidence that security controls are working effectively. It helps identify gaps in your ISMS, validates risk assessments, and demonstrates due diligence in protecting information assets."
  },
  {
    q: "What security controls are tested for ISO 27001 compliance?",
    a: "We test various ISO 27001 Annex A controls including access control, cryptography, communications security, system acquisition and maintenance, supplier relationships, and incident management. Our testing covers both technical and organizational controls."
  },
  {
    q: "Can ISO 27001 penetration testing help with certification audits?",
    a: "Yes, our penetration testing reports provide valuable evidence for ISO 27001 certification audits. They demonstrate that your organization has implemented effective security controls and follows a systematic approach to information security management."
  }
];

const ISO27001PentestingFAQ: React.FC = () => {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const toggleFaq = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <section className="py-20 bg-[#f3fcf7]">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 className="text-3xl lg:text-4xl font-bold text-center text-gray-900 mb-12">
          ISO 27001 Penetration Testing FAQ
        </h2>

        <div className="space-y-4">
          {iso27001PentestingFaqs.map((faq, index) => (
            <div
              key={index}
              className="border border-gray-200 rounded-lg bg-white"
            >
              <button
                className="w-full flex justify-between items-center text-left px-6 py-4 text-gray-900 font-medium"
                onClick={() => toggleFaq(index)}
              >
                <span>{faq.q}</span>
                <ChevronDown
                  className={`w-5 h-5 text-gray-500 transform transition-transform duration-300 ${
                    openIndex === index ? "rotate-180" : ""
                  }`}
                />
              </button>

              <AnimatePresence initial={false}>
                {openIndex === index && (
                  <motion.div
                    key="content"
                    initial={{ height: 0, opacity: 0 }}
                    animate={{ height: "auto", opacity: 1 }}
                    exit={{ height: 0, opacity: 0 }}
                    transition={{ duration: 0.3, ease: "easeInOut" }}
                    className="overflow-hidden"
                  >
                    <div
                      className="px-6 pb-4 text-gray-600 prose prose-sm"
                      dangerouslySetInnerHTML={{ __html: faq.a }}
                    />
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default ISO27001PentestingFAQ;