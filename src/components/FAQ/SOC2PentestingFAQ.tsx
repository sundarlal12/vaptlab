import React, { useState } from "react";
import { ChevronDown } from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";

const soc2PentestingFaqs = [
  {
    q: "What is SOC 2 penetration testing?",
    a: "SOC 2 penetration testing is a security assessment that evaluates your organization's controls against the five trust service criteria: security, availability, processing integrity, confidentiality, and privacy. It helps validate that your security controls are operating effectively."
  },
  {
    q: "Who needs SOC 2 penetration testing?",
    a: "Service organizations that store, process, or transmit customer data typically need SOC 2 compliance. This includes SaaS companies, cloud service providers, data centers, and technology companies that handle sensitive customer information."
  },
  {
    q: "What's the difference between SOC 2 Type I and Type II?",
    a: "SOC 2 Type I evaluates the design of security controls at a specific point in time, while SOC 2 Type II evaluates the operating effectiveness of controls over a period (typically 6-12 months). Type II requires more extensive testing and documentation."
  },
  {
    q: "How does penetration testing support SOC 2 audits?",
    a: "Penetration testing provides evidence that security controls are working effectively and helps identify vulnerabilities that could impact the trust service criteria. Our reports support SOC 2 audits by demonstrating proactive security testing and control validation."
  }
];

const SOC2PentestingFAQ: React.FC = () => {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const toggleFaq = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <section className="py-20 bg-[#f3fcf7]">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 className="text-3xl lg:text-4xl font-bold text-center text-gray-900 mb-12">
          SOC 2 Penetration Testing FAQ
        </h2>

        <div className="space-y-4">
          {soc2PentestingFaqs.map((faq, index) => (
            <div
              key={index}
              className="border border-gray-200 rounded-lg bg-white"
            >
              <button
                className="w-full flex justify-between items-center text-left px-6 py-4 text-gray-900 font-medium"
                onClick={() => toggleFaq(index)}
              >
                <span>{faq.q}</span>
                <ChevronDown
                  className={`w-5 h-5 text-gray-500 transform transition-transform duration-300 ${
                    openIndex === index ? "rotate-180" : ""
                  }`}
                />
              </button>

              <AnimatePresence initial={false}>
                {openIndex === index && (
                  <motion.div
                    key="content"
                    initial={{ height: 0, opacity: 0 }}
                    animate={{ height: "auto", opacity: 1 }}
                    exit={{ height: 0, opacity: 0 }}
                    transition={{ duration: 0.3, ease: "easeInOut" }}
                    className="overflow-hidden"
                  >
                    <div
                      className="px-6 pb-4 text-gray-600 prose prose-sm"
                      dangerouslySetInnerHTML={{ __html: faq.a }}
                    />
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default SOC2PentestingFAQ;